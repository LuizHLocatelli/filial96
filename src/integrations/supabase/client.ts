
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://abpsafkioslfjqtgtvbi.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFicHNhZmtpb3NsZmpxdGd0dmJpIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDU5Njg3ODIsImV4cCI6MjA2MTU0NDc4Mn0.UTF4Gi6rDxQ2a3Pf4J2-7J0yPokcks6J8xO93GEhk-w";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    realtime: {
      params: {
        eventsPerSecond: 10
      }
    },
    auth: {
      autoRefreshToken: true,
      persistSession: true,
      detectSessionInUrl: true
    },
    global: {
      headers: {
        'x-application-name': 'lovable-manager-app',
      },
    }
  }
);

// Initialize attachment storage bucket
(async () => {
  try {
    // Check if attachments bucket exists
    const { data: buckets, error } = await supabase.storage.listBuckets();
    
    if (error) {
      console.error("Error checking buckets:", error);
      return;
    }
    
    const attachmentsBucket = buckets?.find(bucket => bucket.name === "attachments");
    
    // If bucket doesn't exist, create it
    if (!attachmentsBucket) {
      console.log("Creating attachments bucket...");
      const { error: createError } = await supabase.storage
        .createBucket("attachments", { 
          public: true,
          fileSizeLimit: 10485760 // 10MB
        });
        
      if (createError) {
        console.error("Error creating attachments bucket:", createError);
      } else {
        console.log("Attachments bucket created successfully");
      }
    }
  } catch (e) {
    console.error("Error initializing storage:", e);
  }
})();
