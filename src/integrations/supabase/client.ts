
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://abpsafkioslfjqtgtvbi.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFicHNhZmtpb3NsZmpxdGd0dmJpIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDU5Njg3ODIsImV4cCI6MjA2MTU0NDc4Mn0.UTF4Gi6rDxQ2a3Pf4J2-7J0yPokcks6J8xO93GEhk-w";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    realtime: {
      params: {
        eventsPerSecond: 10
      }
    },
    auth: {
      autoRefreshToken: true,
      persistSession: true,
      detectSessionInUrl: true
    },
    global: {
      headers: {
        'x-application-name': 'lovable-manager-app',
      },
    }
  }
);

// Verificar se o bucket attachments existe
(async function initApp() {
  try {
    console.log("Verificando a existência do bucket 'attachments'...");
    
    // Verificar se o bucket existe
    const { data: buckets, error: listError } = await supabase.storage.listBuckets();
    
    if (listError) {
      console.error("Erro ao listar buckets:", listError);
      console.warn("O recurso de uploads de imagens pode não funcionar corretamente.");
      return;
    }
    
    const bucketExists = buckets?.some(bucket => bucket.name === "attachments");
    
    if (bucketExists) {
      console.log("Bucket 'attachments' encontrado. Sistema pronto para uploads.");
    } else {
      console.warn("O bucket 'attachments' não foi encontrado no Supabase.");
      console.warn("O recurso de uploads de imagens não funcionará até que o bucket seja criado manualmente.");
      console.warn("Acesse o console do Supabase e crie o bucket 'attachments' com acesso público.");
    }
  } catch (error) {
    console.error("Erro ao inicializar o app:", error);
  }
})();
