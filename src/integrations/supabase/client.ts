
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://abpsafkioslfjqtgtvbi.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFicHNhZmtpb3NsZmpxdGd0dmJpIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDU5Njg3ODIsImV4cCI6MjA2MTU0NDc4Mn0.UTF4Gi6rDxQ2a3Pf4J2-7J0yPokcks6J8xO93GEhk-w";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    realtime: {
      params: {
        eventsPerSecond: 10
      }
    },
    auth: {
      autoRefreshToken: true,
      persistSession: true,
      detectSessionInUrl: true
    },
    global: {
      headers: {
        'x-application-name': 'lovable-manager-app',
      },
    }
  }
);

// Função auxiliar para criar bucket se não existir
export const setupStorage = async () => {
  try {
    // Verificar se o bucket existe
    const { data: buckets, error: listError } = await supabase.storage.listBuckets();
    
    if (listError) {
      console.error("Erro ao listar buckets:", listError);
      return false;
    }
    
    // Verificar se o bucket "attachments" existe
    const attachmentsBucket = buckets?.find(bucket => bucket.name === "attachments");
    
    if (!attachmentsBucket) {
      console.log("Bucket 'attachments' não encontrado. Tentando criar...");
      
      // Tentar criar o bucket com acesso público
      const { data, error } = await supabase.storage.createBucket('attachments', {
        public: true,
        fileSizeLimit: 10485760 // 10MB
      });
      
      if (error) {
        console.error("Erro ao criar bucket:", error);
        return false;
      }
      
      console.log("Bucket 'attachments' criado com sucesso:", data);
    } else {
      console.log("Bucket 'attachments' já existe.");
    }
    
    return true;
  } catch (error) {
    console.error("Erro ao configurar storage:", error);
    return false;
  }
};

